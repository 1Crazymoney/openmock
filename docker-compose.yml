version: '3.4'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:4.1.1   # kafka 1.1.1
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
      - KAFKA_HEAP_OPTS=-Xmx256m -Xms256m
    healthcheck:
      test: ["CMD-SHELL", "echo ruok | nc -w 2 localhost 2181"]
      interval: 10s
      timeout: 10s
      retries: 5

  kafka:
    image: confluentinc/cp-kafka:4.1.1   # kafka 1.1.1
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_BROKER_ID=1
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_HEAP_OPTS=-Xmx512m -Xms512m
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --zookeeper zookeeper:2181 --list"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  rabbitmq:
    image: rabbitmq:3.6.6-management
    container_name: openmock-rabbitmq
    ports:
      - 4369:4369
      - 5671-5672:5671-5672
      - 25672:25672
      - 15672:15672
    healthcheck:
      timeout: 5s
      interval: 5s
      retries: 5
      test: ["CMD-SHELL", "rabbitmqctl status"]

  redis:
    image: redis:3.0
    container_name: openmock-redis
    ports:
      - "6379:6379"

  openmock-docs:
    build: .
    ports:
      - "9997:9997"
    command: "./swagger serve --host 0.0.0.0 --port 9997 --no-open swagger-docs.yaml"

  openmock:
    build: .
    container_name: openmock
    restart: "on-failure"
    environment:
      OPENMOCK_REDIS_TYPE: "redis"
      OPENMOCK_KAFKA_ENABLED: "true"
      OPENMOCK_KAFKA_SEED_BROKERS: "kafka:9092"
    depends_on:
      - kafka
    volumes:
      - ./demo_templates:/data/templates
    ports:
      - "9999:9999"
      - "9998:9998"

  kt:
    image: evpavel/kt
    command: "sleep 1d"
    environment:
      KT_BROKERS: "kafka:9092"
